

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>기술로그</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2023-12-06T21:10:58+09:00</updated>
  <author>
    <name>김예린</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 김예린 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>basics_단번에 배우는 프론트엔드</title>
    <link href="http://localhost:4000/posts/frontend/" rel="alternate" type="text/html" title="basics_단번에 배우는 프론트엔드" />
    <published>2023-12-02T01:00:00+09:00</published>
  
    <updated>2023-12-02T01:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/frontend/</id>
    <content src="http://localhost:4000/posts/frontend/" />
    <author>
      <name>김예린</name>
    </author>

  
    
    <category term="Web" />
    
    <category term="Study" />
    
  

  
    <summary>
      





      1. 웹을 이루는 기본 뼈대, HTML

1. HTML과 마크업

  HTML 문서 : HTML 태그로 작성된 문서
  확장자 : .html
  HTML : Hyper Text Markup Language
    
      마크업 언어
        
          마크업 : 보기 쉽게끔 마크를 남겨두는 작업
          요소의 계층 관계 파악이 쉬움 (태그들의 구조와 관계를 쉽고 명확하게 파악할 수 있음)
          자식 : 요소에 포함된 또 다른 요소 (요소를 포함 시킨 요소는 ‘부모’가 됨)
          형제 : 서로 동등한 위치의 요소
          Wrapper(래퍼) 태그 : 같은 맥락의 많은 태그들이 있을 떄 이를 감싸주는 태그
            
      ...
    </summary>
  

  </entry>

  
  <entry>
    <title>basics_진짜 쉽게 설명하는 코딩</title>
    <link href="http://localhost:4000/posts/easy-coding/" rel="alternate" type="text/html" title="basics_진짜 쉽게 설명하는 코딩" />
    <published>2023-12-02T01:00:00+09:00</published>
  
    <updated>2023-12-02T01:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/easy-coding/</id>
    <content src="http://localhost:4000/posts/easy-coding/" />
    <author>
      <name>김예린</name>
    </author>

  
    
    <category term="Foundation" />
    
    <category term="Study" />
    
  

  
    <summary>
      





      
  
    HTML : 뼈대
    CSS : 꾸며 주는 역할
    자바스크립트 : 웹사이트를 실제로 움직이게 하는, 실제적인 기능을 갖추게 하는 역할
      
        보통 웹 프론트엔드 기술과 함께 사용
      
    
    자바 : 백엔드 기술과 함꼐 많이 쓰는 프로그래밍 언어
    SQL : 데이터베이스를 다룰 수 있도록 작성하는 것
    return : 값을 보여준다
    세미콜론(;) : 코드의 끝에 써주는 것으로 마침표와 비슷
    대입연산자(=) : 오른쪽의 결과물을 왼쪽에 넣어준다는 의미의 기호
      
        &amp;lt;- 기호로 나타내는 방법도 있음 
 (R이라는 프로그램에서는 변수에 값을 넣을 떄 화살표처럼 생긴 연산자를 사용하기도 함)
    ...
    </summary>
  

  </entry>

  
  <entry>
    <title>springboot_게시판 내 페이지 이동하기</title>
    <link href="http://localhost:4000/posts/crudmovethepage/" rel="alternate" type="text/html" title="springboot_게시판 내 페이지 이동하기" />
    <published>2023-11-26T01:00:00+09:00</published>
  
    <updated>2023-11-26T01:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/crudmovethepage/</id>
    <content src="http://localhost:4000/posts/crudmovethepage/" />
    <author>
      <name>김예린</name>
    </author>

  
    
    <category term="Web" />
    
    <category term="Study" />
    
  

  
    <summary>
      





      6.1 링크와 리다이렉트란




  목록 페이지에 링크와 리다이렉트라는 기능을 이용해 구현
    
      링크 : 미리 정해 놓은 요청을 간편히 전송하는 기능으로 보통 페이지 이동을 위해 사용
        
          HTML의 &amp;lt;a&amp;gt; 태그 혹은 &amp;lt;form&amp;gt; 태그로 작성
          클라이언트가 링크를 통해 어느 페이지로 이동하겠다고 요청하면 서버는 결과 페이지를 응답
        

        
      
      리다이렉트 : 클라이언트가 보낸 요청을 마친 후 계속해서 처리할 다음 요청 주소를 재지시
        
          분리된 기능을 하나의 연속적인 흐름으로 연결할 수 있음
          리다이렉트(재요청)를 지시받은 클라이언트는...
    </summary>
  

  </entry>

  
  <entry>
    <title>springboot_게시판 만들고 새 글 작성하기_Create</title>
    <link href="http://localhost:4000/posts/crudcreat/" rel="alternate" type="text/html" title="springboot_게시판 만들고 새 글 작성하기_Create" />
    <published>2023-11-17T01:00:00+09:00</published>
  
    <updated>2023-11-17T01:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/crudcreat/</id>
    <content src="http://localhost:4000/posts/crudcreat/" />
    <author>
      <name>김예린</name>
    </author>

  
    
    <category term="Web" />
    
    <category term="Study" />
    
  

  
    <summary>
      





      
  
    CRUD
    게시글을 생성(Create)하고 조회(Read)하고 수정(Update)하고 삭제(Delete)하는 것
  


3.1 폼 데이터란

  폼 데이터 : HTML 요소인 &amp;lt;form&amp;gt;태그에 실려 전송되는 데이터
  &amp;lt;form&amp;gt; 태그 : 웹 브라우저에서 서버로 데이터를 전송할 때 사용
    
      &amp;lt;form&amp;gt;태그에 실어 보낸 데이터는 서버의 컨트롤러가 객체(DTO)에 담아 받음
      DTO(Data Transfer Objech)로 받은 데이터는 DB에 저장
    
  




3.2 폼 데이터를 DTO로 받기

3.2.1 입력 폼 만들기

  templates 디렉터리에 articles 디렉터리 생성 후 new.mustache 뷰 페...
    </summary>
  

  </entry>

  
  <entry>
    <title>springboot_MVC 패턴 이해와 실습</title>
    <link href="http://localhost:4000/posts/mvcpatterns/" rel="alternate" type="text/html" title="springboot_MVC 패턴 이해와 실습" />
    <published>2023-11-13T01:00:00+09:00</published>
  
    <updated>2023-11-13T01:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mvcpatterns/</id>
    <content src="http://localhost:4000/posts/mvcpatterns/" />
    <author>
      <name>김예린</name>
    </author>

  
    
    <category term="Web" />
    
    <category term="Study" />
    
  

  
    <summary>
      





      2.1 뷰 템플릿과 MVC 패턴

2.1.1 뷰 템플릿이란

  뷰 템플릿
    
      화면을 담당하는 기술
      웹 페이지를 하나의 틀로 만들고 여기에 변수를 삽입해 서로 다른 페이지로 보여줌
      Mustache : 뷰 템플릿을 만드는 도구 (1장에서 도구 추가함)
    
  




2.1.2 MVC 패턴

  뷰 템플릿 (= 뷰)
    
      컨트롤러 : 클라이언트의 요청에 따라 서버에서 이를 처리하는 역할
      모델 : 데이터를 관리하는 역할
    
  
  MVC 패턴 : 보여주고 처리하고 관리하는 역할을 나누는 기법
    
      웹 페이지를 화면에 보여주고 = View
      클라이언트의 요청을 받아 처리하고 = Controller
      데...
    </summary>
  

  </entry>

</feed>


